{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vmNameSuffix": {
      "type": "string",
      "defaultValue": "simplelinux",
      "metadata": {
          "description": "The name of you Virtual Machine."
      }
    },
    "ubuntuOSVersion": {
      "type": "string",
      "defaultValue": "18.04-LTS",
      "allowedValues": [
          "16.04.0-LTS",
          "18.04-LTS"
      ],
      "metadata": {
          "description": "The Ubuntu version for the VM. This will pick a fully patched image of this given Ubuntu version."
      }
    },
    "VmSize": {
      "type": "string",
      "defaultValue": "Standard_B2s",
      "allowedValues": [
          "Standard_B1s",
          "Standard_B2s",
          "Standard_B4ms",
          "Standard_D3_v2"
      ],
      "metadata": {
          "description": "The size of the VM"
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "defaultValue": "vNet",
      "metadata": {
          "description": "Name of the VNET"
      }
    },
    "subnetName": {
      "type": "string",
      "defaultValue": "Subnet",
      "metadata": {
          "description": "Name of the subnet in the virtual network"
      }
    },
    "networkSecurityGroupName": {
      "type": "string",
      "defaultValue": "SecGroupNet",
      "metadata": {
          "description": "Name of the Network Security Group"
      }
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "jlizcano",
      "metadata": {
        "description": "User name for the Virtual Machine."
      }
    },
    "commandToExecute":{
      "type": "string",
      "defaultValue": "sudo apt-get update; sudo apt upgrade; time;"
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {"description":"Location for all resources."}
    },
    "tenantId": {
      "type": "string",
      "defaultValue": "[subscription().tenantId]",
      "metadata": {"description":"TenantId for keyvault access policies."}
    },
    "adUserId": {
      "type": "string",
      "defaultValue": null
    },
    "adminPassword": {
      "reference": {
          "keyVault": {
          "id:": "[concat('/subscriptions/',subscription().id,'/resourceGroups/',resourceGroup().id,'/providers/Microsoft.KeyVault/vaults/',variables('keyvaultName'))]"
          },
          "secretName": "vmAdminPassword"
      }
    }
  },
  "variables": {
    "keyvaultName": "[concat('keyvault','-',uniqueString(resourceGroup().id))]",
    "vnetName": "[concat('vnet-',uniquestring(resourceGroup().id))]",
    "vmName": "[concat('vm-',parameters('vmNameSuffix'),uniquestring(resourceGroup().id))]",
    "dnsLabelPrefix": "[concat('dns-',parameters('vmNameSuffix'),'-',uniquestring(resourceGroup().id))]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "nicName": "[concat('nic-int-',variables('vmName'),'-',uniquestring(resourceGroup().id))]",
    "pipName": "[concat('nic-pip-',variables('vmName'),'-',uniquestring(resourceGroup().id))]",
    "NSGName": "[concat('nsg-',uniquestring(resourceGroup().id))]",
    "subnetName": "default",
    "addressPrefix": "10.192.168.0/24",
    "subnetAddressPrefix": "10.192.168.0/26",
    "vmOSstorageAccountName": "[concat('osdisk',uniquestring(resourceGroup().id))]",
    "vmDatastorageAccountName": "[concat('datadisk',uniquestring(resourceGroup().id))]",
    "vmStorageAccountType": "Standard_LRS",
    "vmStorageAccountContainerName": "vhds",
    "vmOSDiskName": "[concat('osdisk-',variables('vmName'),'-')]",
    "vmDataDiskName": "[concat('datadisk-',variables('vmName'),'-')]",
    "publicIPAddressType": "Dynamic",
    "osDiskType": "Standard_LRS",
    "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('subnetName'))]",
    "passwd": {
      "reference": {
        "keyVault": {
        "id:": "[concat('/subscriptions/',subscription().id,'/resourceGroups/',resourceGroup().id,'/providers/Microsoft.KeyVault/vaults/',variables('keyvaultName'))]"
        //"id": "/subscriptions/<SubscriptionID>/resourceGroups/mykeyvaultdeploymentrg/providers/Microsoft.KeyVault/vaults/<KeyVaultName>"
        },
        "secretName": "adminPasswd"
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.KeyVault/vaults",
      "name": "[variables('keyVaultName')]",
      "location": "[parameters('location')]",
      "apiVersion": "2016-10-01",
      "properties": {
        "enabledForDeployment": true,
        "enabledForTemplateDeployment": true,
        "enabledForDiskEncryption": false,
        "accessPolicies": [
          {
            "objectId": "[parameters('adUserId')]",
            "tenantId": "[parameters('tenantId')]",
            "permissions": {
              "keys": [
                "Get",
                "List",
                "Update",
                "Create",
                "Import",
                "Delete",
                "Recover",
                "Backup",
                "Restore"
              ],
              "secrets": [
                "Get",
                "List",
                "Set",
                "Delete",
                "Recover",
                "Backup",
                "Restore"
              ],
              "certificates": [
                "Get",
                "List",
                "Update",
                "Create",
                "Import",
                "Delete",
                "Recover",
                "Backup",
                "Restore",
                "ManageContacts",
                "ManageIssuers",
                "GetIssuers",
                "ListIssuers",
                "SetIssuers",
                "DeleteIssuers"
              ]
            }
          }
        ],
        "tenantId": "[parameters('tenantId')]",
        "sku": {
          "name": "standard",
          "family": "A"
        }
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(variables('keyVaultName'), '/', 'adminUsername')]",
      "apiVersion": "2016-10-01",
      "location": "[parameters('location')]",
      "scale": null,
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
      ],
      "properties": {
        "contentType": "string",
        "value": "[parameters('adminUsername')]",
        "attributes": {
          "enabled": true
        }
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(variables('keyVaultName'), '/', 'adminPasswd')]",
      "apiVersion": "2016-10-01",
      "location": "[parameters('location')]",
      "scale": null,
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
      ],
      "properties": {
        "contentType": "securestring",
        "value": "[base64(uniqueString(resourceGroup().id))]",
        "attributes": {
          "enabled": true
        }
      }
    },
    {
      "apiVersion": "2019-02-01",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('NSGName')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
		      {
            "name": "Allow_HTTP",
            "properties": {
              "description": "Allow HTTP",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "80",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 110,
              "direction": "Inbound"
            }
          },
          {
            "name": "Allow_SSH",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 111,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2018-10-01",
      "name": "[variables('nicName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups/', variables('NSGName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/', variables('vnetName'))]",
        "[resourceId('Microsoft.Network/publicIpAddresses/', variables('pipName'))]"
      ],
      "properties": {
        "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                  "subnet": {
                      "id": "[variables('subnetRef')]"
                  },
                  "privateIPAllocationMethod": "Dynamic",
                  "publicIpAddress": {
                      "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('pipName'))]"
                  }
              }
            }
        ],
        "networkSecurityGroup": {
            "id": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('NSGName'))]"
        }
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2019-04-01",
      "name": "[variables('vnetName')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
              "name": "[variables('subnetName')]",
              "properties": {
                  "addressPrefix": "[variables('subnetAddressPrefix')]",
                  "privateEndpointNetworkPolicies": "Enabled",
                  "privateLinkServiceNetworkPolicies": "Enabled"
              }
          }
        ]
      }
    },
    {
        "type": "Microsoft.Network/publicIpAddresses",
        "apiVersion": "2019-02-01",
        "name": "[variables('pipName')]",
        "location": "[parameters('location')]",
        "properties": {
            "publicIpAllocationMethod": "Dynamic",
            "publicIPAddressVersion": "IPv4",
            "dnsSettings": {
                "domainNameLabel": "[variables('dnsLabelPrefix')]"
            },
            "idleTimeoutInMinutes": 4
        },
        "sku": {
            "name": "Basic",
            "tier": "Regional"
        }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2019-03-01",
      "name": "[variables('vmName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces/', variables('nicName'))]",
        "[resourceId('Microsoft.KeyVault/vaults/secrets/', concat(variables('keyVaultName'), '/', 'adminPasswd'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('VmSize')]"
        },
        "storageProfile": {
          "osDisk": {
            "createOption": "fromImage",
            "managedDisk": {
              "storageAccountType": "[variables('osDiskType')]"
            }
          },
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('ubuntuOSVersion')]",
            "version": "latest"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
            }
          ]
        },
        "osProfile": {
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
          //"linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2015-06-15",
      "name": "[concat(variables('vmName'),'/CustomScript')]",
      "dependsOn": ["[resourceId('Microsoft.Compute/virtualMachines/', variables('vmName'))]"],
      "location": "[parameters('location')]",
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": true,
        "protectedSettings": {
          "commandToExecute": "[parameters('commandToExecute')]"
        }
      }
    }
  ],
  "outputs": {
    "keyVaultId": {
      "type": "string",
      "value": "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
    }
  }
}